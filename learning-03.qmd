---
title: "Learning Reflection"
subtitle: "Week 3"
format: html
self-contained: true
editor: visual
---

# Learning reflections

Learning reflections are part of your weekly homework and have a weight of 20% of your final grade. Write a reflection in your own words on the different parts of the weeks material below. You can also use your learning reflections as a notebook as you work through exercises or readings. Write as much as you like, but a minimum of 100 words in total.

# Lecture

I still find it challenging to determine when the mapping aesthetics for data should go in the original `ggplot` function following the `data =` entry or in the geom argument. While I understand putting the aesthetics in the first `ggplot` function applies it to all the following geoms, I get confused when it comes to filling/coloring with a third set of data. This is something I am glad I had the change to practice in the homework and will continue to experiment with and work on.

# Homework Assignment

I think it is so powerful the impact that `geoms` have in `ggplot`. There are so many differnt kinds of plots that are possible to render and nearly unlimited layers to modify the appearance and presentation of data. One of my goals both in this class and throughout the course of my PhD is to learn the most effective ways to displace large amounts of interesting and valuable data on a single figure. In the scatter/line plot section of the homework, being able to facet graphs, include information regarding a country's continent, size, and life expectancy and display in one figure is very efficient and academically sophisticated. This is something I want to work on and achieve in my capstone project for this class.

# Readings

# Submit learning reflections

## Stage, Commit & Push to GitHub

This final section introduces the workflow you need to follow at the end of each live coding exercise, homework assignment, learning reflection. It ensures that all the changes you have made to files in this repository (folder) are synced with the version that is stored on GitHub. The steps will be described at the end of each of the files.

1.  Open the Git pane in RStudio. It's in the top right corner in a separate tab.
2.  **Stage** your changes by checking appropriate box next to all files (if you select one file with your mouse, you can then highlight them all with Ctrl + A on your keyboard and check all boxes)
3.  Write a meaningful commit message (e.g. "Completed homework assignment 1b) in the **Commit message** box
4.  Click **Commit**. Note that every commit needs to have a commit message associated with it.
5.  Go to your course-material GitHub repo and refresh the page. You should see your commit message next to the updated files.

## Open an issue on GitHub

Once you have ensured that the Quarto document renders without errors and you have pushed all your changes to GitHub, it is to complete the assignment by opening an issue on your course-material GitHub repo.

1.  Navigate to your course-material GitHub repo.
2.  Click on **Issues**, and then **New issue** button.
3.  Write a meaningful title in the **Title** field
4.  Tag the course instructor with using the `@` sign in combination with `larnsce` as the username
5.  Add any questions or comments
