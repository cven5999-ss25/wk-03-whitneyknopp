---
title: "Live Coding - Data Visualisation"
format: html
self-contained: true
editor: visual
editor_options: 
  chunk_output_type: console
execute:
  echo: true
  warning: false
---

```{r}

# R Packages that are required for this script are loaded in the beginning

library(readr)
library(dplyr)
library(ggplot2)

# An R Package to work with model outputs

library(broom)

```

# Data import

## What a waste!

What a Waste is a global project to aggregate data on solid waste management from around the world. This database features the statistics collected through the effort, covering nearly all countries and over 330 cities. Beyond waste generation, there are a long list of additina indicators in this dataset.

-   Source: https://datacatalog.worldbank.org/search/dataset/0039597

```{r}

# Only walk through. No live coding.
# This code is copied from your homework

global_waste_data <- read_csv(here::here("data/country_level_data_0.csv"))

```

# Data tidying

## Waste data

```{r}

# Only walk through. No live coding.
# This code is copied from your homework

global_waste_data_small <- global_waste_data |> 
  select(country_name, 
         iso3c, 
         income_id,
         gdp, 
         total_msw_total_msw_generated_tons_year, 
         population_population_number_of_people) |>  
  rename(msw_tons_year = total_msw_total_msw_generated_tons_year,
         population = population_population_number_of_people) 

```

# Data transformation

## Waste data

```{r}

# This code is copied from your homework
# Only walk through. No live coding.

global_waste_data_kg_year <- global_waste_data_small |> 
  mutate(capita_kg_year = msw_tons_year / population * 1000) |> 
  mutate(income_id = factor(income_id, 
                            levels = c("HIC", "UMC", "LMC", "LIC"))) |>  
  # select relevant columns
  select(country_name:income_id, gdp, capita_kg_year)

```

# Data visualisation

## Aesthetic mappings

Main aesthetic mappings:

-   x
-   y
-   color/fill
-   shape
-   size
-   alpha (Transparency)

## Scaling

All functions that adapt the scale start with `scale_` followed by the aesthetic to be adapted, e.g. `x_`, and then followed by the type of variable, e.g. `continouous`. So to adapt a continuous scale on an x-axis, the function to use is: `scale_x_continuous()`

### Axis scales

### Color scales

-   scale_color_brewer()

```{r}

```

-   scale_color_manual()

```{r}

my_colors <- c("#ED6D37", "#901C6C", "#18A5C5", "#A6CE8F")


```

## Geoms

Aesthetic mappings are typically defined within the `ggplot()` function. Every geom that follows will use the same aesthetic mappings to visualise the data.

```{r}
ggplot(data = global_waste_data_kg_year,
       mapping = aes(x = gdp, 
                     y = capita_kg_year,
                     color = income_id,
                     shape = income_id)) +
  geom_point(size = 3, alpha = 3/4) +
  geom_smooth(method = "lm", se = FALSE) +
  
  # https://scales.r-lib.org/reference/label_log.html
  scale_x_log10(labels = scales::label_log(), limits = c(800, 150000))  +
  scale_y_continuous(breaks = seq(0, 1400, 200), limits = c(0, 1400)) +

  scale_color_manual(values = my_colors)

```

If we want to define a mapping for one geom only, then the aesthetic mappings must be included in the function of that geom, here `geom_point()`. We can even use additional data in the same plot for an individual geom, see `geom_text()`. - defined for a geom only - geom_text

```{r}

global_waste_data_kg_year_filter <- global_waste_data_kg_year |> 
  filter(country_name %in% c("United States", "Switzerland", "Ghana", "Turkey", "Nepal", "Kenya"))

ggplot(data = global_waste_data_kg_year,
       mapping = aes(x = gdp, 
                     y = capita_kg_year)) +
  geom_point(size = 3, alpha = 3/4, 
             mapping = aes(color = income_id,
                           shape = income_id)) +
  geom_smooth(method = "lm", 
              se = FALSE, 
              color = "gray20", 
              linetype = "longdash") +
  geom_label(data = global_waste_data_kg_year_filter,
            mapping = aes(label = country_name)) +
  
  # https://scales.r-lib.org/reference/label_log.html
  scale_x_log10(labels = scales::label_log(), limits = c(800, 150000))  +
  scale_y_continuous(breaks = seq(0, 1400, 200), limits = c(0, 1400)) +
  scale_color_manual(values = my_colors)

```

## Labels + Theme

A reference to @fig-plot-waste-gdp.

```{r}

# No live coding. Show labels and theme functions and explain.

ggplot(data = global_waste_data_kg_year,
       mapping = aes(x = gdp, 
                     y = capita_kg_year)) +
  geom_point(size = 3, alpha = 3/4, 
             mapping = aes(color = income_id,
                           shape = income_id)) +
  geom_smooth(method = "lm", 
              se = FALSE, 
              color = "gray20", 
              linetype = "longdash") +
  geom_label(data = global_waste_data_kg_year_filter,
            mapping = aes(label = country_name)) +
  
  # https://scales.r-lib.org/reference/label_log.html
  scale_x_log10(labels = scales::label_log(), limits = c(800, 150000))  +
  scale_y_continuous(breaks = seq(0, 1400, 200), limits = c(0, 1400)) +
  scale_color_manual(values = my_colors) +
  labs(title = "Municipal Solid Waste Generation",
       subtitle = "Increasing income results in greater solid waste generation",
       x = "GDP per capity (USD)",
       y = "MSW generation pert capity (kg/yr)",
       color = "Income categories",
       shape = "Income categories",
       caption = "Data: What a Waste Global Database."
  ) +
  theme_minimal(base_size = 12) 
```

# Data modeling

Learn more about modeling in R:

-   R4DS chapter - https://r4ds.had.co.nz/model-intro.html
-   Book: Statistical Inference via Data Science: A ModernDive into R and the Tidyverse! - https://moderndive.com/
-   R Packages: Tidymodels - https://www.tidymodels.org/

https://broom.tidymodels.org/articles/broom.html

```{r}

lmfit <- lm(capita_kg_year ~ gdp, data = global_waste_data_kg_year)

summary(lmfit)

tidy(lmfit) |> 
  knitr::kable(digits = 2)

glance(lmfit) |> 
  knitr::kable(digits = 2)



```

# Data communication

Let's add a table of contents, a date, and an author to the document.

You can learn more about the options for HTML files in the Quarto documentation: https://quarto.org/docs/reference/formats/html.html

And to learn more about using Quarton for scholarly writing: https://quarto.org/docs/authoring/title-blocks.html

# Stage, Commit & Push to GitHub

1.  Open the Git pane in RStudio. It's in the top right corner in a separate tab.
2.  **Stage** your changes by checking appropriate box next to all files (if you select one file with your mouse, you can then highlight them all with Ctrl + A on your keyboard and check all boxes)
3.  Write a meaningful commit message (e.g. "Completed homework assignment 1b) in the **Commit message** box
4.  Click **Commit**. Note that every commit needs to have a commit message associated with it.
5.  Go to your course-material GitHub repo and refresh the page. You should see your commit message next to the updated files.
